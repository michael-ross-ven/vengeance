
2022-05-06
$release 64
    version 1.1.27

    updated README.md



2022-04-13
$release 63
    version 1.1.26

    flux_cls:
        .index_row() and .index_rows() methods removed
        added .to_string() method



2022-04-11
$release 62
    version 1.1.25

    updated setup.py



2022-04-11
$release 61
    version 1.1.24

    flux_cls:
        .values() returns row.values as copy, not as byref

    iter.map_values_to_enum:
        to_snake_case=False param added
        duplicate names suffix changed from '__dup_{num}', to '__{num}'



2022-04-08
$release 60
    version 1.1.23

    updated README.md
    
    flux_cls:
        .values() returns row.values as copy, not as byref



2022-04-02
$release 59
    version 1.1.22

    flux_cls:
        .as_preview_array property renamed to ._preview_as_array
        .as_preview property renamed to ._preview_as_tuples
        .aap_indices property renamed to .preview_indices
        .matrix_by_headers renamed to .reassign_columns

    flux_row_cls:
        .row_label attribute added to class

    excel_levity_cls:
        renamed to lev_cls



2021-09-09
$release 58
    version 1.1.21

    flux_cls:
        .as_preview property added
        .as_array() method removed
        .dictrows() renamed to .dicts()



2021-07-24
$release 57
    version 1.1.20

    correction to bug in excel_com.workbook



2021-07-23
$release 56
    version 1.1.19

    correction to bug in excel_com.workbook



2021-07-23
$release 55
    version 1.1.18

    filesystem:
        refactored path standardization



2021-07-17
$release 54
    version 1.1.17

    log_cls:
        date_format param added to __init__()

    flux_cls:
        after argument removed from .insert_columns() method



2021-07-17
$release 53
    version 1.1.16

    flux_cls:
        .append_columns() now accepts values



2021-05-01
$release 52
    version 1.1.15

    flux_cls:
        .group_rows() and .group_rows_append() methods added
        after argument added to .insert_columns() method



2021-03-20
$release 51
    version 1.1.14

    flux_cls:
        further improvement to .__setstate__() and .__getstate__()
        universally resolves __init__() params for subclasses, which makes pickling much more stable,
        almost like a copyreg function



2021-03-18
$release 50
    version 1.1.13

    flux_cls:
        improvement to .__setstate__() and .__getstate__()



2021-02-26
$release 49
    version 1.1.12

    re-sync to github



2021-02-26
$release 48
    version 1.1.11

    flux_cls:
        .reverse() method added
        .reversed() method added
        .aap_indices class property added
        .as_array() method modifications



2021-02-07
$release 47
    version 1.1.10

    flux_cls:
        minor bug fixes / optimizations



2021-01-16
$release 46
    version 1.1.9

    flux_cls:
        .__init__():
            performance optimization (15% improvement) by turning off garbage collection

        .as_preview() method deleted
        .as_array() method added

        .__repr__() enhanced

        .header_names changed from a property to a method



2021-01-07
$release 45
    version 1.1.8

    bug fix in write_file:
        '.flux_a' was in pickle_extensions instead of '.flux'



2020-12-27
$release 45
    version 1.1.7

    minor bug fixes



2020-12-27
$release 44
    version 1.1.6
    
    flux_cls.append_columns():
        values argument removed

    flux_cls.__setitem__():
        now accepts insertion syntax for column assignment, eg
            flux[(0, 'new_col')] = ['v'] * flux.num_rows


2020-12-23
$release 43
    version 1.1.5

    *** added loads_excel_module flag to conditional ***:
        attempt to load Excel module in __init__, but allow it to fail if it's not expected to support Windows COM
        loads_excel_module = (not is_pypy_interpreter) and is_windows_os
        *** this flag allows flux_cls to be used independently from Excel functionality on a broader range of platforms ***

    flux_cls.columns2() removed: 
        (leftover from performance testing)



2020-12-20
$release 42
    version 1.1.4

    flux_cls.columns():
        now returns iterator instead of list



2020-12-18
$release 41
    version 1.1.3

    changed to wheel packaging
    added styled() function



2020-08-27
$release 40
    version 1.1.2

    flux_cls.append_columns() and flux_cls.__setitem__():
        fixed bug when column values have an empty iterable, eg:
            v = [(), ('a',), ('b', 'c')]
            flux_a.append_columns('new_b', values=v)

    filesystem.write_file():
        fixed bug when filetype == '.json', no longer tries to del fkwargs['default'] 
        without checking if 'default' is in fkwargs first

        when filetype == '.json', fkwargs['ensure_ascii'] default value added to fkwargs

        fixed bug when when filetype is unspecified, data is now converted to string using pprint.pformat,
        instead of assuming data is iterable and joining to string by newline

    filesystem.read_file():
        when filetype == '.csv', fkwargs['nrows'] value specifies number of rows



2020-07-24
$release 39
    version 1.1.1

    text.vengeance_warning()
        stack frame target adjusted to refer to the filename and line number of function invokation,
        not to the function definition



2020-07-21
$release 38
    version 1.1.0

    tries to make more appropriate gencache folder for win32com in setup.py:
        site.getsitepackages()[1] + '\\win32com\\gen_py\\' instead of 
        os.environ['userprofile'] + '\\AppData\\Local\\Temp\\gen_py\\'
    
    filesystem.read_file() and filesystem.write_file()
        added filetype arg to supercede read / write behavior based on path extension 

    flux_cls
        .namedrows() method added
        .join() method added
        .map_rows() method added
        .map_rows_append() method added

        deprecated warning added to .index_row() 
        deprecated warning added to .index_rows()
        
        .map_rows() and .map_rows_append()
            as_namedtuple parameter changed to rowtype
            
        in-place methods now return self (for easier method chaining syntax)

        .__setitem__()
            no longer attempts to transposes one-dimensional values
            no longer raises Exception when value length != to self.num_rows
            a single value can be used to implicitly set an entire column of values, eg:
                flux['column'] = 'somevalue'

        '{ðŸ—²jaggedðŸ—²}' indicator added to __repr__

    flux_row_cls
        .reserved_names() classmethod added

        .is_jagged() method added
        .is_empty() method added
        .namedrow() method added
        .join_values() method added
        
        .headers property added 
            (returns safe copy of self._headers)

        ._view_as_array property renamed to .as_array
        .names property renamed to .header_names

        '{ðŸ—²jaggedðŸ—²}' indicator added to __repr__

    log_cls
        .__init__() signature changed to
            def __init__(self, path='',
                               level='DEBUG',
                               log_format='%(message)s',
                               exception_callback=None):

        StreamHandler changed to colored_streamhandler_cls() if stream is not running in terminal



2020-04-05
$release 37
    filesystem.read_file() and filesystem.write_file()
        added fkwargs param for additional flexibility
        optional ujson package used to parse json files

    flux_cls
        if flux_cls is not subclassed, __getstate__ and __setstate__ will call constructor directly 
            ~30% speed improvement to .serialize()
            ~20% speed improvement to .deserialize()


2020-02-09
$release 36
    removed write_version_file() from setup.py

    flux_cls:
        correction to .matrix_by_headers() when submitting a single column to be renamed (eg, flux.matrix_by_headers({'col': 'new_col'}))
        correction to .matrix_by_headers(), no longer adds duplicate header row when retrieving duplicate columns


2020-01-31
$release 35
    iter.map_numeric_indices() function no longer converts '' to 'None'
    iter.compact_ordereddict() function allows built-in dict to be used in place of OrderedDict if python interpreter is >= 3.6
        the compacted dict uses about half the memory of OrderedDict

    iter.OrderedDefaultDict inherits super class from iter.compact_ordereddict()

    flux_cls:
        .index_row() and .index_rows() utilize iter.compact_ordereddict()
        mapped param changed to headers in .columns()

        .min_num_cols property added
        .header_values property renamed to .header_names
        .first_five_rows property renamed to .preview

        getattr for private methods implemented in .__parse_commands()

        .serialize() and .deserialize() no longer apply '.flux' file extension to path, just validates extension
        .__matrix_row_index() method removed from .rows() and .flux_rows()
             r_1 and r_2 should always be ints, not '*h', '*f', or '*l' like in excel_levity_cls

    excel_levity_cls:
        .header_values property renamed to .header_names
        .meta_header_values property renamed to .meta_header_names



2020-01-20
$release 34
    as_namedtuples param added to flux_cls.index_row()
    as_namedtuples param added to flux_cls.index_rows()



2020-01-20
$release 33
    index_sequence() renamed to map_numeric_indices()
    mapped param added to flux_cls.columns()



2020-01-18
$release 32
    fixed bug in flux_cls.__validate_modify_matrix(), checks for first_row.is_header_row() when matrix is flux_row_cls



2020-01-18
$release 31
    fixed bug in divide_sequence
    flux_cls.__iadd__() method added
    flux_cls.fill_jagged_rows() method removed

    flux_row_cls:
        self.__dict__ is checked for name in __setattr__() and __setitem__()
        (allows replacement of all row values without slice, flux_row.values = ... instead of flux_row.values[:] = ...)

    added @lru_cache memoization for date parse functions
    removed time_fragment_re.sub for parse_date_string() function
        (was for very specialized cases like: '2017/01/01 00:00:00 000')



2019-12-02
$release 30
    flux_cls.columns() method added
    flux_cls.__getitem__() now only returns column values
    flux_cls._num_cols changed to flux.max_num_cols() property
    flux_cls.identify_jagged_columns() method added

    flux_cls.to_flux_rows() 
        changed to a classmethod
        returns headers instead of setting self.headers

    pool_executor_log_cls class removed

    index_sequence() no longer converts ('', None) values to '_None_'



2019-10-25
$release 29
    added *args, **kwargs params to flux_cls.filter()
    added *args, **kwargs params to flux_cls.filtered()

    flux_cls.__row_values_accessor()
        returns tuples if client sumbitted length 1 tuple
        (no longer calls modify_iteration_depth(f, depth=0))

    flux_cls.__validate_matrix()
        iteration depth of matrix allowed to be greater than 2 (row values may have iterables)

    workbook.__excel_app_from_hwnd() now traps win32com gencache AttributeError



2019-09-16
$release 28
    removed /examples/ folder



2019-09-08
$release 27
    removed odbc_service_cls
    pyodbc removed from dependencies



2019-09-03
$release 26
	iter.index_sequence() {'', None} values are converted to '_None_', no longer skipped (skipping causes a mismatch between length of mappewd indices and length of sequence)



2019-08-31
$release 25
    iter.index_sequence() skips {'', None} values



2019-08-28
$release 24
    bug fix in workbook.open_workbook() (unhashable set for excel_instance not in {'any', None})



2019-08-25
$release 23
    bug fix in excel_levity_cls.__validate_destination_size()



2019-08-19
$release 22
    flux_cls.contiguous_rows() method added
    flux_cls.contiguous_indices() method added

    added flux_row_cls.__hash__()

    added excel_levity_cls.__validate_destination_size()



2019-08-08
$release 21
    flux_cls.insert_columns() and flux_cls.append_columns() will raise error if non-unique column names submitted
    flux_cls.bind() and flux_cls.unbind() methods removed
    performance optimization (~2x faster) to flux_cls.__getitem__, when parameter is a slice
    
    flux_row_cls.class_names expanded to include 'names', 'dict' and 'namedtuples'
    
    '.pickle' extension added to read_file() / write_file()



2019-06-27
$release 20
    minor updates to util.filesystem



2019-05-29
$release 19
    flux_cls
    removed .has_data attribute
    fixed bug in .copy()

    performance optimization (~10% faster) to transpose()
    allow 'any' as excel_instance param for workbook.open_workbook() function 
    added cached levs to excel_project_template.py



2019-05-24
$release 18
    
    flux_cls
        renamed internal / private methods in flux_cls
        ._num_cols is set to None in .insert_columns(), .append_columns(), .delete_columns()



2019-05-19
$release 17
    updated README.md

    flux_cls.__to_flux_rows()
        performance optimization (~10% faster) in 


2019-05-19
$release 16
    updated README.md

    fixed bug in in flux_cls.matrix_by_headers() 
    (needed to reset self._num_cols back to None)
    
    '.pkl' extension added to read_file() / write_file()



2019-05-14
$release 15
    updated README.md



2019-05-14
$release 14
    fixed release script to call setup.py before publishing to githib (so it uploads updated version.py file correctly)



2019-05-14
$release 13
    __kill_process() no longer called when corrupt Excel applications detected



2019-05-07
$release 12
    flux_cls
        .apply_row_indices() method added
        fixed bug in .matrix_by_headers() when num_rows is 0

    flux_row_cls
        .__getitem__(), .__setitem__(), .__getattr__() and .__setattr__()
            additional performance optimization (~10% improvement) by eliminating function call overhead



2019-05-01
$release 11
    fixed bug in get_worksheet(), when tab name does not exist
    flux_row_cls.__getitem__() and flux_row_cls.__setitem__()
        small performance optimization (~10% improvement) by removing self.__dict__ attributes



2019-04-24
$release 10
    minor correction to flux_cls constructor when matrix is None
    changed flux_cls.is_empty attribute to property



2019-04-19
$release 9
    added flux_row_cls.__getstate__()
    added flux_row_cls.__setstate__()

    fixed iteration depth bug in flux_cls.__to_flux_rows()



2019-04-11
$release 8
    jagged column check in worksheet.__excel_friendly_matrix()
    added max_row check in worksheet.__excel_friendly_matrix()
    
    fixed bug in iter.modify_iteration_depth()

    fixed bug in flux_cls.__validate_row_accessor()

    if excel_levity_cls.is_empty, will return [[]] for .rows() and .flux_rows()



2019-04-11
$release 7
    added optional encoding='utf-8' param to filesystem.read_file 
    added optional encoding='utf-8' param to filesystem.write_file

    flux_cls accepts matrix as optional param in constructor
    flux_cls.is_empty property renamed to has_data
    added flux_cls.is_empty attribute

    flux_cls.__to_flux_rows() now returns a matrix instead of setting self.matrix

    simplified flux_cls.append_rows()
    simplified flux_cls.insert_rows()
    forced paths to have appropriate file extension in flux_cls.to_csv() / flux_cls.from_csv()
    forced paths to have appropriate file extension in flux_cls.to_json() / flux_cls.from_json()



2019-04-05
$release 6
    added optional d_format param to dates.to_datetime
    new print_timeit() function 
        (stolen from https://github.com/realpython/materials/blob/master/pandas-fast-flexible-intuitive/tutorial/timer.py)

    added append_c property to excel_levity_cls
    changed flux_cls._matrix to flux_cls.matrix
    updated README.md



2019-04-01
$release 5
    added ValueError exception to flux_cls.namedtuples and flux_row_cls.namedtuples
    fixed bug in flux_cls.__repr__



2019-03-29
$release 4
    minor edits to documentation
    clear_worksheet_filter() now always called as a part of excel_levity_cls.set_range_boundaries()



2019-03-28
$release 3
    added flux_cls.unbind()
    added flux_row_cls.unbind()
    modified util.iter methods for recursive conversion



2019-03-22
$release 2
    correction to filesystem.copy_dir
    removed pandas from dependencies (__parse_string_pandas)
    removed line_profiler from dependencies
    added python-dateutil to dependencies (__parse_string_dateutil)
    updated setup.py with packages=setuptools.find_packages()



2019-03-21
$release 1
    published to pypi.org